CREATE TABLE dbo_tc.GLOBAL_SEARCH_DATA_UPDATE
  ( 
  ID NUMBER NOT NULL,
  ENTITY_ID NUMBER(38,0) NOT NULL,
  PRIMARY KEY (id)
  ); 
  
  CREATE SEQUENCE DBO_TC.SEQ_G_SEARCH_DATA_UPDATE_ID  MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;
  ------------- Create synonyms
  
  CREATE OR REPLACE SYNONYM APP_TC.GLOBAL_SEARCH_DATA_UPDATE FOR DBO_TC.GLOBAL_SEARCH_DATA_UPDATE;
  grant all on DBO_TC.GLOBAL_SEARCH_DATA_UPDATE to APP_TC;
   CREATE OR REPLACE SYNONYM APP_TC.SEQ_G_SEARCH_DATA_UPDATE_ID FOR DBO_TC.SEQ_G_SEARCH_DATA_UPDATE_ID;
  grant all on DBO_TC.SEQ_G_SEARCH_DATA_UPDATE_ID to APP_TC;
  


ALTER TABLE DBO_MP.PROJECT ADD created_by_app number;
ALTER TABLE DBO_MP.PROJECT
ADD CONSTRAINT fk_project_created_by FOREIGN key (created_by_app) references DBO_MP.LOOKUP(lookup_id);
COMMIT;


update DBO_MP.PROJECT set CREATED_BY_APP = (select l.LOOKUP_ID from DBO_MP.LOOKUP l inner join DBO_MP.LOOKUP_TYPE lt on l.LOOKUP_TYPE_ID = lt.LOOKUP_TYPE_ID and lt.LOOKUP_TYPE_NAME = 'DEFAULT_TAB' and l.LOOKUP_NAME = 'Hitlist') where CREATED_BY_APP is null;
commit;




  
create or replace TRIGGER "DBO_TC"."G_SEARCH_PARTY_UPDATE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_TC.PARTY
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.PARTY_ID);

END;
/
create or replace TRIGGER "DBO_TC"."G_SRCH_PART_UPDTE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_DP.PARTICIPANTS
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.DEAL_ID);

END;
/
create or replace TRIGGER "DBO_TC"."G_SEARCH_DEAL_UPDATE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_DP.DEALS
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.DEAL_ID);

END;
/
create or replace TRIGGER "DBO_TC"."G_SRCH_PROJ_TIT_UPDATE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_MP.PROJECT_TITLE
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.PROJECT_ID);

END;
/
create or replace TRIGGER "DBO_TC"."G_SRCH_PROJ_UPDATE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_MP.project
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.PROJECT_ID);

END;
/
declare 
v_cont number;
begin
select count(*) into v_cont from SYS.ALL_TABLES where TABLE_NAME = 'FC_DEAL' and owner = 'DBO_FC';
if v_cont <> 0 then
execute immediate 'create or replace TRIGGER "DBO_TC"."G_SRCH_FCDEAL_UPDTE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_FC.FC_DEAL
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.ID);

END;';
end if; 
end;
/


create or replace TRIGGER "DBO_TC"."G_SRCH_P_AKA_UPDATE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_TC.party_aka
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.PARTY_ID);

END;
/
create or replace TRIGGER "DBO_TC"."G_SRCH_SCRIPT_TAL_UPDT_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_MP.PROJECT_SCRIPT_TALENT
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.PROJECT_SCRIPT_ID);

END;
/
create or replace TRIGGER "DBO_TC"."G_SRCH_PROJ_SCRPT_UPDT_TRIG" 
AFTER insert or UPDATE
   ON DBO_MP.PROJECT_SCRIPT
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.PROJECT_SCRIPT_ID);

END;
/
create or replace TRIGGER "DBO_TC"."G_SRCH_PROJ_TAL_UPDATE_TRIGGER" 
AFTER insert or UPDATE
   ON DBO_MP.PROJECT_TALENT
   FOR EACH ROW
BEGIN
      insert into DBO_TC.GLOBAL_SEARCH_DATA_UPDATE values (dbo_tc.SEQ_G_SEARCH_DATA_UPDATE_ID.nextVal,:new.PROJECT_ID);

END;
