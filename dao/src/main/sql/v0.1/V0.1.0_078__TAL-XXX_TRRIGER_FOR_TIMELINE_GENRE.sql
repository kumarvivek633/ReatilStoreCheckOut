BEGIN
    DBO_TC.CREATE_AUDIT_TABLES_TIMELINE ('DBO_TC','TALENT_GENRE','TALENT_GENRE');
    Execute Immediate 'CREATE OR REPLACE SYNONYM APP_TC.TALENT_GENRE_AUDIT FOR DBO_TC.TALENT_GENRE_AUDIT';
    Execute Immediate 'grant all on DBO_TC.TALENT_GENRE_AUDIT to APP_TC'; 
    Execute Immediate 'DROP table DBO_TC.GENRE_AUDIT';
    Execute Immediate 'DROP table DBO_TC.GENRE';
END;
/
--GENRE_AUDIT_TRIGGER
CREATE OR REPLACE TRIGGER "DBO_TC"."GENRE_AUDIT_TRIGGER" AFTER INSERT OR UPDATE OR DELETE ON dbo_tc.TALENT_GENRE
FOR EACH ROW
DECLARE
BEGIN

IF INSERTING THEN
  insert into DBO_TC.TALENT_GENRE_AUDIT (TALENT_GENRE_ID,PARTY_ID,ORDERS,GENRE_ID,DELETED, DML_INDICATOR  , DML_TIMESTAMP  ) 
  values (:new.TALENT_GENRE_ID,:new.PARTY_ID,:new.ORDERS,:new.GENRE_ID,:new.DELETED , 'I'  , SYSTIMESTAMP  ) ;
  END IF;

IF UPDATING THEN
 insert into DBO_TC.TALENT_GENRE_AUDIT (TALENT_GENRE_ID,PARTY_ID,ORDERS,GENRE_ID,DELETED , DML_INDICATOR  , DML_TIMESTAMP  ) 
  values (:new.TALENT_GENRE_ID,:new.PARTY_ID,:new.ORDERS,:new.GENRE_ID,:new.DELETED, 'U'  , SYSTIMESTAMP  ) ;
  END IF;

IF DELETING THEN
 insert into DBO_TC.TALENT_GENRE_AUDIT (TALENT_GENRE_ID,PARTY_ID,ORDERS,GENRE_ID,DELETED , DML_INDICATOR  , DML_TIMESTAMP  ) 
  values (:old.TALENT_GENRE_ID,:old.PARTY_ID,:old.ORDERS,:old.GENRE_ID,:old.DELETED, 'D'  , SYSTIMESTAMP  ) ;
 END IF;

END;